<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                            xmlns:cmd="clr-namespace:FileManager.Commands"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="DataGridExplorer" TargetType="{x:Type DataGrid}">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="{DynamicResource CFont}"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="{DynamicResource CFont}"/>
        </Style.Resources>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BDataGridBorder}"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="HeadersVisibility" Value="None"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource BDataGridHardDriveBackground}"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="RowStyle"  Value="{DynamicResource DataGridExplorerRow}"/>
        <Setter Property="ColumnWidth" Value="*"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
    </Style>
    <Style x:Key="DataGridExplorerRow" TargetType="{x:Type DataGridRow}">
        <Setter Property="Margin" Value="0,1,1,0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border 
                        x:Name="DGR_Border" 
                        Margin="0.5" 
                        Padding="0" 
                        BorderThickness="0" 
                        SnapsToDevicePixels="True" 
                        Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames 
                                            Storyboard.TargetName="DGR_Border" 
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame 
                                                KeyTime="0:0:0.25" 
                                                Value="{DynamicResource CDataGridRowNormal}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal_Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames 
                                            Storyboard.TargetName="DGR_Border" 
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame 
                                                KeyTime="0:0:0.25" 
                                                Value="{DynamicResource CDataGridRowPress}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames 
                                            Storyboard.TargetName="DGR_Border" 
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.25" Value="{DynamicResource CDataGridRowOver}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <SelectiveScrollingGrid>
                            <DataGridCellsPresenter 
                                ItemsPanel="{TemplateBinding ItemsPanel}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataGridHardDriveCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border 
                        Background="Transparent" 
                        Margin="3,0,0,0">
                        <ContentPresenter VerticalAlignment="Center" />
                        <Border.InputBindings>
                            <MouseBinding 
                            Gesture="LeftClick" 
                            Command="{x:Static cmd:DataGridCommands.OpenHardDrive}"
                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridCell}}}" />
                        </Border.InputBindings>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataGridDirectoryCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border 
                        Background="Transparent" 
                        Margin="3,0,0,0">
                        <ContentPresenter VerticalAlignment="Center" />
                        <Border.InputBindings>
                            <MouseBinding
                            Gesture="LeftDoubleClick" 
                            Command="{x:Static cmd:DataGridCommands.OpenDataGridObject}"
                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridCell}}}" />
                        </Border.InputBindings>
                        <Border.ContextMenu>
                            <ContextMenu Style="{DynamicResource ContextMenu}">
                                <MenuItem 
                                Header="Открыть"
                                Command="{x:Static cmd:DataGridCommands.OpenDataGridObjectContext}"
                                CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
                                <MenuItem 
                                    Header="Копировать"
                                    Command="{x:Static cmd:DataGridCommands.CopyObject}"
                                    CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
                                <MenuItem 
                                    Header="Вырезать"
                                    Command="{x:Static cmd:DataGridCommands.CutObject}"
                                    CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
                                <MenuItem 
                                    Header="Вставить"
                                    Command="{x:Static cmd:DataGridCommands.PasteObject}"
                                    CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
                                <MenuItem 
                                    Header="Удалить"
                                    Command="{x:Static cmd:DataGridCommands.DeleteObject}"
                                    CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
                                <MenuItem 
                                    Header="Создать папку"
                                    Command="{x:Static cmd:DataGridCommands.CreateDirectory}"/>
                                <MenuItem 
                                    Header="Создать файл"
                                    Command="{x:Static cmd:DataGridCommands.CreateFile}"/>
                                <MenuItem 
                                    Header="Обновить"
                                    Command="{x:Static cmd:DataGridCommands.Refresh}"/>
                                <MenuItem 
                                    Header="Переименовать"
                                    Command="{x:Static cmd:DataGridCommands.RenameObject}"
                                    CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
                                <MenuItem 
                                    Header="Свойства"
                                    Command="{x:Static cmd:DataGridCommands.GetObjectInfo}"
                                    CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
                            </ContextMenu>
                        </Border.ContextMenu>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ContextMenu" TargetType="{x:Type ContextMenu}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ContextMenuItem}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border 
                        x:Name="Border" 
                        Background="{DynamicResource BContextMenuBack}" 
                        BorderThickness="1" 
                        BorderBrush="{DynamicResource BContextMenuBorder}" >
                        <StackPanel 
                            IsItemsHost="True" 
                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ContextMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="{DynamicResource BFont2}"/>
        <Setter Property="FontFamily" Value="Calibri"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border 
                        x:Name="Border" 
                        Background="{DynamicResource BContextMenuBack}">
                        <ContentPresenter 
                            x:Name="HeaderHost" 
                            Margin="5,5,20,5" 
                            VerticalAlignment="Center" 
                            ContentSource="Header"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger 
                            Property="IsHighlighted" 
                            Value="true">
                            <Setter 
                                Property="Background" 
                                TargetName="Border" 
                                Value="{DynamicResource BContextMenuItem}"/>
                            <Setter 
                                Property="Foreground" 
                                Value="{DynamicResource BFont1}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>